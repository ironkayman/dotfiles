# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#   source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
# fi


### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
### ==============================


# Load pure theme
zinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'
zinit light sindresorhus/pure

zi for \
    atload"zicompinit; zicdreplay" \
    blockf \
    lucid \
    wait \
  zsh-users/zsh-completions
# OMZ completion-style
zstyle ':completion:*' menu select

zstyle :prompt:pure:path color '#ea9b2c'
zstyle :prompt:pure:prompt:success color '#29dcfb'
zstyle :prompt:pure:prompt:error color '#e13f00'
zstyle :prompt:pure:execution_time color '#d9c68d'
zstyle :prompt:pure:git:dirty color '#0098ff'

# Plugin loaded with investigating.
zi light zdharma-continuum/history-search-multi-word
zi light zdharma-continuum/fast-syntax-highlighting
zi light zsh-users/zsh-history-substring-search

# SHELL config END
# ===================

# https://unix.stackexchange.com/questions/389881/history-isnt-preserved-in-zsh
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory

# Traps and binds
# -----------------

# omitted: / ( ) _ - =
# added: " '
export WORDCHARS="*?.[]~&;!#$%^{}<>'\""

# https://unix.stackexchange.com/questions/5293/how-do-i-jump-to-the-next-or-previous-word-with-ctrl-arrow-keys-in-a-console
# Enable Ctrl+arrow key bindings for word jumping
bindkey '^[[1;5C' forward-word     # Ctrl+right arrow
bindkey '^[[1;5D' backward-word    # Ctrl+left arrow

# https://github.com/zsh-users/zsh-history-substring-search
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
# -----------
# PATH Setup
# -----------

export VOLTA_HOME="$HOME/.volta"

PATH="$VOLTA_HOME/bin:$PATH"
PATH="./bin:$PATH"
PATH="$HOME/.local/bin:$PATH"

# add locally built git-cinnabar
# with makefile two symbolic links to git-cinnabar and git remote-hg are created so we target the source directory only
PATH="$HOME/git/rust/lapce/target/release:$PATH"

PATH="$HOME/git/rupost/desktop/git-cinnabar:$PATH"

# doomemacs
PATH="$HOME/.config/emacs/bin:$PATH"

# flutter
PATH="/usr/bin/flutter/bin/:$PATH"

# ----------
# PATH END
# ----------

alias tx='tar --extract --file'
alias wget-any='wget --tries=5 --retry-connrefused --timeout=60 --waitretry=60 --read-timeout=360 --max-redirect=10 --protocol-directories'

# taskfile
# -------------------
alias t='task'

# rust-related
# -------------------
alias cr='cargo'
alias crr='cargo run'
alias crb='cargo build'

# git
# ------------------
alias g='git'
# REMINDER: git also available as g
# git logs a cool-looking tree of oneleined commits
alias ggraph='git log --oneline --all --graph --decorate'
# git logs cool-looking tree of every commit with metadata (author and stuff)
alias ggraph-w-authors='git log --all --graph --decorate'
alias gfetch='git fetch --all --tags --prune-tags'
alias greset='git reset --hard'
alias gclean='git clean -fdx'
alias gsd='git diff --submodule=log'
alias glog='git log --oneline --decorate --graph'
alias glog-self='git log --author="$(git config user.name)"'

alias gsu='git submodule update'
alias gsf='git submodule update --force --rebase'
alias glog-lines='function _search_by_lines(){git log -L"$2","$3":"$1";};_search_by_lines'

alias v='vim'
alias fk='flatpak'

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias cz='chezmoi'
alias zl='zellij'

# zig C/C++ compiler replacement
alias zcc="zig cc"
alias zcxx="zig c++"

export PATH

# scrollable less output with a wheel
export LESS=-R

# ~/.cache/sccache size
export SCCACHE_CACHE_SIZE=60G

# ollama
export OLLAMA_MODELS="$HOME/.var/ollama/models"

# Wasmer
export WASMER_DIR="$HOME/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

# eval "$(zellij setup --generate-auto-start zsh)"

